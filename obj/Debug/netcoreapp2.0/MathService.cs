// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MathService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from MathService.proto</summary>
public static partial class MathServiceReflection {

  #region Descriptor
  /// <summary>File descriptor for MathService.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MathServiceReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFNYXRoU2VydmljZS5wcm90byIrCgpBZGRSZXF1ZXN0Eg0KBUZpcnN0GAEg",
          "ASgBEg4KBlNlY29uZBgCIAEoASIXCghBZGRSZXBseRILCgNTdW0YASABKAEi",
          "MAoPTXVsdGlwbHlSZXF1ZXN0Eg0KBUZpcnN0GAEgASgBEg4KBlNlY29uZBgC",
          "IAEoASIfCg1NdWx0aXBseVJlcGx5Eg4KBlJlc3VsdBgBIAEoATJeCgtNYXRo",
          "U2VydmljZRIfCgNBZGQSCy5BZGRSZXF1ZXN0GgkuQWRkUmVwbHkiABIuCghN",
          "dWx0aXBseRIQLk11bHRpcGx5UmVxdWVzdBoOLk11bHRpcGx5UmVwbHkiAGIG",
          "cHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::AddRequest), global::AddRequest.Parser, new[]{ "First", "Second" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AddReply), global::AddReply.Parser, new[]{ "Sum" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MultiplyRequest), global::MultiplyRequest.Parser, new[]{ "First", "Second" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MultiplyReply), global::MultiplyReply.Parser, new[]{ "Result" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class AddRequest : pb::IMessage<AddRequest> {
  private static readonly pb::MessageParser<AddRequest> _parser = new pb::MessageParser<AddRequest>(() => new AddRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MathServiceReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRequest(AddRequest other) : this() {
    first_ = other.first_;
    second_ = other.second_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddRequest Clone() {
    return new AddRequest(this);
  }

  /// <summary>Field number for the "First" field.</summary>
  public const int FirstFieldNumber = 1;
  private double first_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double First {
    get { return first_; }
    set {
      first_ = value;
    }
  }

  /// <summary>Field number for the "Second" field.</summary>
  public const int SecondFieldNumber = 2;
  private double second_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Second {
    get { return second_; }
    set {
      second_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(First, other.First)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Second, other.Second)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (First != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(First);
    if (Second != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Second);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (First != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(First);
    }
    if (Second != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Second);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (First != 0D) {
      size += 1 + 8;
    }
    if (Second != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddRequest other) {
    if (other == null) {
      return;
    }
    if (other.First != 0D) {
      First = other.First;
    }
    if (other.Second != 0D) {
      Second = other.Second;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          First = input.ReadDouble();
          break;
        }
        case 17: {
          Second = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class AddReply : pb::IMessage<AddReply> {
  private static readonly pb::MessageParser<AddReply> _parser = new pb::MessageParser<AddReply>(() => new AddReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AddReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MathServiceReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddReply(AddReply other) : this() {
    sum_ = other.sum_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AddReply Clone() {
    return new AddReply(this);
  }

  /// <summary>Field number for the "Sum" field.</summary>
  public const int SumFieldNumber = 1;
  private double sum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Sum {
    get { return sum_; }
    set {
      sum_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AddReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AddReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Sum, other.Sum)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Sum != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Sum);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Sum != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(Sum);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Sum != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AddReply other) {
    if (other == null) {
      return;
    }
    if (other.Sum != 0D) {
      Sum = other.Sum;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Sum = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class MultiplyRequest : pb::IMessage<MultiplyRequest> {
  private static readonly pb::MessageParser<MultiplyRequest> _parser = new pb::MessageParser<MultiplyRequest>(() => new MultiplyRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MultiplyRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MathServiceReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiplyRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiplyRequest(MultiplyRequest other) : this() {
    first_ = other.first_;
    second_ = other.second_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiplyRequest Clone() {
    return new MultiplyRequest(this);
  }

  /// <summary>Field number for the "First" field.</summary>
  public const int FirstFieldNumber = 1;
  private double first_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double First {
    get { return first_; }
    set {
      first_ = value;
    }
  }

  /// <summary>Field number for the "Second" field.</summary>
  public const int SecondFieldNumber = 2;
  private double second_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Second {
    get { return second_; }
    set {
      second_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MultiplyRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MultiplyRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(First, other.First)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Second, other.Second)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (First != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(First);
    if (Second != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Second);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (First != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(First);
    }
    if (Second != 0D) {
      output.WriteRawTag(17);
      output.WriteDouble(Second);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (First != 0D) {
      size += 1 + 8;
    }
    if (Second != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MultiplyRequest other) {
    if (other == null) {
      return;
    }
    if (other.First != 0D) {
      First = other.First;
    }
    if (other.Second != 0D) {
      Second = other.Second;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          First = input.ReadDouble();
          break;
        }
        case 17: {
          Second = input.ReadDouble();
          break;
        }
      }
    }
  }

}

public sealed partial class MultiplyReply : pb::IMessage<MultiplyReply> {
  private static readonly pb::MessageParser<MultiplyReply> _parser = new pb::MessageParser<MultiplyReply>(() => new MultiplyReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MultiplyReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MathServiceReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiplyReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiplyReply(MultiplyReply other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MultiplyReply Clone() {
    return new MultiplyReply(this);
  }

  /// <summary>Field number for the "Result" field.</summary>
  public const int ResultFieldNumber = 1;
  private double result_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MultiplyReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MultiplyReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Result, other.Result)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Result);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0D) {
      output.WriteRawTag(9);
      output.WriteDouble(Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MultiplyReply other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0D) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Result = input.ReadDouble();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
